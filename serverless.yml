---
service: bow
frameworkVersion: '2'
disabledDeprecations:
  - LAMBDA_HASHING_VERSION_V2

plugins:
  - serverless-deployment-bucket
  - serverless-prune-plugin
  - serverless-python-requirements
  - serverless-dynamodb-local
  - serverless-apigw-binary
  - serverless-domain-manager
  - serverless-add-api-key

package:
  exclude:
    - .dynamodb/**
    - .dynamodb-data/**
    - .envrc
    - .git/**
    - .gitignore
    - .mypy_cache/
    - .venv/
    - node_modules/**
    - package.json
    - poetry.lock
    - pyproject.toml
    - scripts/
    - serverless.yml
    - yarn.lock

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'ap-northeast-1'}
  deploymentBucket:
    name: ${self:custom.resourcePrefix}-sls-deploy
    serverSideEncryption: AES256
  logRetentionInDays: 30
  endpointType: edge
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            Fn::Join:
              - ":"
              - - arn:aws:dynamodb
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - table/${self:custom.resourcePrefix}-*
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource:
            - !Sub "${ImageBucket.Arn}"
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource:
            - !Sub "${ImageBucket.Arn}/*"

custom:
  resourcePrefix: ${self:service}-${self:provider.stage}
  prune:
    automatic: true
    number: 3
  pythonRequirements:
    dockerizePip: false
    usePoetry: true
  apigwBinary:
    types:
      - multipart/form-data
  dynamodb:
    stages:
      - local
    start:
      dbPath: ./.dynamodb-data/
      migrate: false
      seed: false
    seed: ${file(./tests/data/testdata.yml)}
  domainName:
    local: bow-api-dev.jozuo.work
    dev: bow-api-dev.jozuo.work
    prod: bow-api.jozuo.work
  customDomain:
    domainName: ${self:custom.domainName.${self:provider.stage}}
    basePath: ""
    certificateName: "*.jozuo.work"
    certificateArn: arn:aws:acm:ap-northeast-1:602526353155:certificate/f59fa794-8ee6-4ec3-94e6-d16c1a3a9a22
    createRoute53Record: false
    endpointType: edge
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: false
  apiKeys:
    - name: bow-api

functions:
  api:
    handler: app.api.main.handler
    name: ${self:custom.resourcePrefix}-api
    environment:
      TABLE_PREFIX: ${self:custom.resourcePrefix}
      IMAGE_BUCKET: ${self:custom.resourcePrefix}-image
    events:
      - http:
          path: /{path+}
          method: any
          private: true
          cors: true

resources:
  Resources:
    ImageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.resourcePrefix}-image
    OwnerTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.resourcePrefix}-owner
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    DogTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.resourcePrefix}-dog
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: owner_id
            AttributeType: S
          - AttributeName: dog_id
            AttributeType: S
        KeySchema:
          - AttributeName: owner_id
            KeyType: HASH
          - AttributeName: dog_id
            KeyType: RANGE
    TaskTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.resourcePrefix}-task
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: owner_id
            AttributeType: S
          - AttributeName: task_id
            AttributeType: S
        KeySchema:
          - AttributeName: owner_id
            KeyType: HASH
          - AttributeName: task_id
            KeyType: RANGE
    EventTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.resourcePrefix}-event
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: owner_id
            AttributeType: S
          - AttributeName: event_id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: owner_id
            KeyType: HASH
          - AttributeName: event_id
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: event-lsi1
            KeySchema:
              - AttributeName: owner_id
                KeyType: HASH
              - AttributeName: timestamp
                KeyType: RANGE
            Projection:
                ProjectionType: ALL
